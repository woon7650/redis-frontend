{"ast":null,"code":"import axios from 'axios';\n\n//create axios instance\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor - 요청 인터셉터\naxios.interceptors.request.use(function (config) {\n  // Do something before request is sent - 요청 날리기 전 실행\n  return config;\n}, function (error) {\n  // Do something with request error\t- 요청 에러시 실행\n  return Promise.reject(error);\n});\n\n// Add a response interceptor - 응답 인터셉터\naxios.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\t\n  // - 200번대 응답은 여기서 처리\n  // Do something with response data - 응답받은 데이터 처리\n  return response;\n}, function (error) {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  // - 200번대 외의 응답은 여기서 처리\n  // Do something with response error - 응답 에러 처리\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","service","create","baseURL","process","env","VUE_APP_BASE_API","headers","interceptors","request","use","config","error","Promise","reject","response"],"sources":["C:/Users/woon7/login-redis-frontend/src/util/request.js"],"sourcesContent":["import axios from 'axios'\r\n\r\n\r\n//create axios instance\r\nconst service = axios.create({\r\n    baseURL: process.env.VUE_APP_BASE_API,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n})\r\n\r\n// Add a request interceptor - 요청 인터셉터\r\naxios.interceptors.request.use(function(config) {\r\n    // Do something before request is sent - 요청 날리기 전 실행\r\n    return config;\r\n}, function(error) {\r\n    // Do something with request error\t- 요청 에러시 실행\r\n    return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor - 응답 인터셉터\r\naxios.interceptors.response.use(function(response) {\r\n    // Any status code that lie within the range of 2xx cause this function to trigger\t\r\n    // - 200번대 응답은 여기서 처리\r\n    // Do something with response data - 응답받은 데이터 처리\r\n    return response;\r\n}, function(error) {\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // - 200번대 외의 응답은 여기서 처리\r\n    // Do something with response error - 응답 에러 처리\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default service"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAGzB;AACA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EACzBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,gBAAgB;EACrCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAP,KAAK,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAASC,MAAM,EAAE;EAC5C;EACA,OAAOA,MAAM;AACjB,CAAC,EAAE,UAASC,KAAK,EAAE;EACf;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;;AAEF;AACAZ,KAAK,CAACQ,YAAY,CAACO,QAAQ,CAACL,GAAG,CAAC,UAASK,QAAQ,EAAE;EAC/C;EACA;EACA;EACA,OAAOA,QAAQ;AACnB,CAAC,EAAE,UAASH,KAAK,EAAE;EACf;EACA;EACA;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;AAEF,eAAeX,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}