{"ast":null,"code":"import { login } from '@/api/user_api';\nconst getDefaultState = () => {\n  return {\n    userId: null,\n    userName: null\n  };\n};\nexport const user = {\n  state: () => ({\n    userId: null,\n    userName: null\n  }),\n  getters: {\n    getUser(state) {\n      const user = {\n        userId: state.userId,\n        userNmae: state.userName\n      };\n    }\n  },\n  mutations: {\n    RESET_STATE: state => {\n      Object.assign(state, getDefaultState());\n    },\n    SET_USER: (state, userVO) => {\n      state.userId = userVO.userId, state.userName = userVO.userName;\n    }\n  },\n  actions: {\n    login({\n      commit,\n      dispatch\n    }, userVO) {\n      return new Promise((resolve, reject) => {\n        login(userVO).then(response => {\n          alert('로그인 성공');\n          resolve(true);\n        }).catch(error => {\n          alert('로그인 실패');\n          reject(error);\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["login","getDefaultState","userId","userName","user","state","getters","getUser","userNmae","mutations","RESET_STATE","Object","assign","SET_USER","userVO","actions","commit","dispatch","Promise","resolve","reject","then","response","alert","catch","error"],"sources":["C:/Users/woon7/login-redis-frontend/src/store/module/user.js"],"sourcesContent":["import { login } from '@/api/user_api'\r\n\r\nconst getDefaultState = () => {\r\n    return {\r\n        userId: null,\r\n        userName: null,\r\n    }\r\n}\r\n\r\nexport const user = {\r\n    state: () => ({\r\n        userId: null,\r\n        userName: null\r\n    }),\r\n\r\n    getters: {\r\n        getUser(state) {\r\n            const user = {\r\n                userId: state.userId,\r\n                userNmae: state.userName\r\n            }\r\n        }\r\n    },\r\n\r\n    mutations: {\r\n        RESET_STATE: (state) => {\r\n            Object.assign(state, getDefaultState())\r\n        },\r\n        SET_USER: (state, userVO) => {\r\n            state.userId = userVO.userId,\r\n                state.userName = userVO.userName\r\n        }\r\n    },\r\n\r\n    actions: {\r\n\r\n        login({ commit, dispatch }, userVO) {\r\n            return new Promise((resolve, reject) => {\r\n                login(userVO)\r\n                    .then((response) => {\r\n                        alert('로그인 성공');\r\n                        resolve(true);\r\n                    })\r\n                    .catch((error) => {\r\n                        alert('로그인 실패');\r\n                        reject(error)\r\n                    });\r\n            })\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AAEtC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC1B,OAAO;IACHC,MAAM,EAAE,IAAI;IACZC,QAAQ,EAAE;EACd,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,IAAI,GAAG;EAChBC,KAAK,EAAEA,CAAA,MAAO;IACVH,MAAM,EAAE,IAAI;IACZC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEFG,OAAO,EAAE;IACLC,OAAOA,CAACF,KAAK,EAAE;MACX,MAAMD,IAAI,GAAG;QACTF,MAAM,EAAEG,KAAK,CAACH,MAAM;QACpBM,QAAQ,EAAEH,KAAK,CAACF;MACpB,CAAC;IACL;EACJ,CAAC;EAEDM,SAAS,EAAE;IACPC,WAAW,EAAGL,KAAK,IAAK;MACpBM,MAAM,CAACC,MAAM,CAACP,KAAK,EAAEJ,eAAe,CAAC,CAAC,CAAC;IAC3C,CAAC;IACDY,QAAQ,EAAEA,CAACR,KAAK,EAAES,MAAM,KAAK;MACzBT,KAAK,CAACH,MAAM,GAAGY,MAAM,CAACZ,MAAM,EACxBG,KAAK,CAACF,QAAQ,GAAGW,MAAM,CAACX,QAAQ;IACxC;EACJ,CAAC;EAEDY,OAAO,EAAE;IAELf,KAAKA,CAAC;MAAEgB,MAAM;MAAEC;IAAS,CAAC,EAAEH,MAAM,EAAE;MAChC,OAAO,IAAII,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACpCpB,KAAK,CAACc,MAAM,CAAC,CACRO,IAAI,CAAEC,QAAQ,IAAK;UAChBC,KAAK,CAAC,QAAQ,CAAC;UACfJ,OAAO,CAAC,IAAI,CAAC;QACjB,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAK;UACdF,KAAK,CAAC,QAAQ,CAAC;UACfH,MAAM,CAACK,KAAK,CAAC;QACjB,CAAC,CAAC;MACV,CAAC,CAAC;IACN;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}